#!/usr/bin/env ruby
# frozen_string_literal: true

# Id$ nonnax 2021-11-19 10:15:08 +0800
require 'file/file_ext'
# require 'csv'
require 'df/df'
# require 'df/diff'
require 'file/filer'
require 'rubytools/numeric_ext' # auto pretty-print
require 'rubytools/ansi_color'
require_relative '../lib/diff'
require_relative '../lib/cache'
require_relative '../lib/price_get'

def puts_diff(a, b)
  # a & b are DF objects
  [
    'last close',
    b.diff(a, width: 15, symbols:%w[- \  +]).to_s(width: 15),
    'previous close',
    a.diff(a, width: 15, symbols:%w[d \  u]).to_s(width: 15)
  ]
  .join("\n---\n")
  .tap(&method(:puts))
end

def file_exist!(path)
  File.exist?(path) || File.write(path, '')
  path
end

def make_path(ext)
  path=File.join('/tmp', [Time.now.strftime('%Y%m%d'), ext].join('.'))
  # file_exist!(path)
end

def fstore; 'coins.mar' end

cache(data_file: fstore, fn: method(:puts_diff)) do
  require 'faraday'
  data = get
  DF
    .new(cols: data.first.size - 1) { data.prepend(header_keys) }
    .tap{ |df| puts df.to_s(width: 15) }
end
